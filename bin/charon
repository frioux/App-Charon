#!/usr/bin/env perl

use strict;
use warnings;

use Getopt::Long::Descriptive;
use IO::Async::Loop;
use Net::Async::HTTP::Server::PSGI;

use App::Charon::Web;

my ($opt, $usage) = describe_options(
  'charon %o [file|dir]',
  [ 'listen|l=s',   "Listens on an address, whether HOST:PORT or :PORT"],
  [],
  [ 'help',       "print usage message and exit" ],
);

print($usage->text), exit if $opt->help;

my $loop = IO::Async::Loop->new;

my $quit = $loop->new_future;

my $handler = Net::Async::HTTP::Server::PSGI->new(
   app => App::Charon::Web->new( quit => $quit )->to_psgi_app,
);
$loop->add($handler);

my $host = '0.0.0.0';
my $port;

if ($opt->listen and ($host, $port) = $opt->listen =~ m/^(.*):(\d+)$/) {
   $host = '0.0.0.0' if $host eq '*' || $host eq '';
}

$port ||= 5000;

$handler->listen(
   host => $host,
   service => $port,
   socktype => 'stream',
   on_listen_error => sub { die $_[1] },
   on_resolve_error => sub { die $_[1] },
   on_listen => sub {
      warn "listening on: " .
         $_[0]->read_handle->sockhost . ':' .
         $_[0]->read_handle->sockport . "\n"
   },
);

$quit->get;
